package com.logictree.school.app;

import org.ksoap2.serialization.SoapObject;

import android.app.Activity;
import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Bundle;
import android.text.AndroidCharacter;
import android.text.TextUtils;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.logictree.school.R;
import com.logictree.school.network.SoapServiceManager;

public class ChangePasswordActivity extends Activity implements OnClickListener {

	public static final String TAG = "ChangePassword Activity";
	private EditText email;
	private EditText mobileno;
	private EditText oldPwd;
	private EditText newPwd;
	private EditText confPwd;
	private SoapObject responseObject;
	private ProgressDialog progressdialog;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.layout_change_password);
		initViews();

	}

	private void initViews() {
		email = (EditText) findViewById(R.id.changepwd_edittext_email);
		mobileno = (EditText) findViewById(R.id.change_pwd_edittext_mobileno);
		oldPwd = (EditText) findViewById(R.id.change_pwd_edittext_oldpwd);
		newPwd = (EditText) findViewById(R.id.change_pwd_edittext_newpwd);
		confPwd=(EditText) findViewById(R.id.change_pwd_edittext_confpwd);
		((Button) findViewById(R.id.change_pwd_btn_change))
				.setOnClickListener(ChangePasswordActivity.this);
	}

	@Override
	public void onClick(View v) {

		switch (v.getId()) {
		case R.id.change_pwd_btn_change:
			changePassword();
			break;
		default:
			break;
		}
	}

	private void changePassword() {
		
		if(TextUtils.isEmpty(email.getText().toString()))
		{
			email.setError("Please give your Email Id");
			return;
		}
		else if(TextUtils.isEmpty(mobileno.getText().toString()))
		{
			mobileno.setError("Please give Mobile No");
			return;
		}
		else if(TextUtils.isEmpty(oldPwd.getText().toString()))
		{
			oldPwd.setError("Please give Old Password");
			return;
		}
		else if(TextUtils.isEmpty(newPwd.getText().toString()))
		{
			newPwd.setError("Please give New Password");
			return;
		}
		else if(TextUtils.isEmpty(confPwd.getText().toString()))
		{
			confPwd.setError("Please give conform Password");
			return;
		}
		else if(!(newPwd.getText().toString().trim().equalsIgnoreCase(confPwd.getText().toString().trim())))
		{
			Toast.makeText(ChangePasswordActivity.this, "New and Conform passwords did not match", Toast.LENGTH_SHORT).show();
			
		} 
		else {
			new changePasswordAsynchTask().execute(email.getText().toString(),
					mobileno.getText().toString(), oldPwd.getText().toString(),
					newPwd.getText().toString());
		}
	}

	class changePasswordAsynchTask extends AsyncTask<String, Boolean, Boolean> {
		@Override
		protected Boolean doInBackground(String... params) {

			return getResponseObject(params[0], params[1], params[2], params[3]);
		}

		@Override
		protected void onPostExecute(Boolean result) {
			super.onPostExecute(result);
			Log.v(TAG, "POST EXECUTE");
			progressdialog.dismiss();
			if (result) {
				if (responseObject.hasProperty("CPMSG")) {
					if (responseObject.getProperty("CPMSG").toString()
							.equalsIgnoreCase("INVALID DETAILS")) {
						Toast.makeText(ChangePasswordActivity.this,
								"Invalid Details", Toast.LENGTH_SHORT).show();
					} else {
						RegisterActivity
								.showDialog(ChangePasswordActivity.this);
					}
				}
			}
		}

		@Override
		protected void onPreExecute() {
			super.onPreExecute();
			progressdialog = new ProgressDialog(ChangePasswordActivity.this);
			progressdialog.setMessage("Please wait....");
			progressdialog.show();

		}

	}

	public Boolean getResponseObject(String email, String mobile,
			String oldpwd, String newpwd) {
		// TODO Auto-generated method stub

		responseObject = SoapServiceManager.sendchangePasswordRequest(email,
				mobile, oldpwd, newpwd);
		if (responseObject != null) {
			return true;
		} else {
			return false;
		}

	}
}
